@startuml

class LineFollower {
    -FollowerState current_state
    -Set<FollowerState> possible_states
}

abstract class FollowerState{
    +ActionResult doAction(Event event)
    -activate(Event activation_event)
}

FollowerState<|-- Init
FollowerState<|-- LineFollow
FollowerState<|-- TurnRightAngle
FollowerState<|-- LineSearch
FollowerState<|-- Stop

class ActionResult {
    FollowerState next_state
}

enum Pose {
    OUT_OF_LINE
    ON_LINE_WITH_TREE_CENTRAL_SENSORS
    ON_LINE_WITH_CENTRAL_SENSOR
    ON_LINE_WITHOUT_CENTRAL_SENSOR
    ON_LEFT_TURN
    ON_RIGHT_TURN
    ON_RIGHT_CORNER
}

class Event {
    Pose pose
    Integer eventTime
    List sensorValues
}

LineFollower --> ActionResult
FollowerState -> ActionResult
FollowerState -left-> Event
LineFollower  --> Event
Event -up-> Pose
LineFollower -down-> FollowerState



@enduml